generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(cuid())
    username      String    @unique
    email         String
    password      String
    followers     User[]    @relation("UserFollows")
    followings    User[]    @relation("UserFollows")
    about         About?
    avatar        String?
    bio           String?
    posts         Post[]    @relation("UserPosts")
    likedPosts    Post[]    @relation("LikedPosts")
    savedPosts    Post[]    @relation("SavedPosts")
    comments      Comment[]
    likedComments Comment[] @relation("LikedComments")
    reply         Reply[]
    likedReqlys   Reply[]   @relation("LikedReplys")
    updatedAt     DateTime  @updatedAt
    createdAt     DateTime  @default(now())
}

model Post {
    id          String    @id @default(cuid())
    title       String
    description String
    template    String
    rtl         Boolean   @default(false)
    author      User      @relation("UserPosts", fields: [authorId], references: [id])
    authorId    String
    readingTime Int
    tags        String[]
    thumbnail   String
    images      String[]
    comments    Comment[]
    isPublic    Boolean   @default(true)
    likes       User[]    @relation("LikedPosts")
    savedUsers  User[]    @relation("SavedPosts")
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
}

model Comment {
    id        String   @id @default(cuid())
    author    User     @relation(fields: [authorId], references: [id])
    authorId  String
    template  String
    post      Post     @relation(fields: [postId], references: [id])
    postId    String
    replys    Reply[]
    rtl       Boolean  @default(false)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    likes     User[]   @relation("LikedComments")
}

model Reply {
    id        String   @id @default(cuid())
    template  String
    author    User     @relation(fields: [authorId], references: [id])
    authorId    String
    rtl       Boolean  @default(false)
    comment   Comment? @relation(fields: [commentId], references: [id])
    commentId String?
    replys    Reply[]  @relation("ReplyReplys")
    reply     Reply?   @relation("ReplyReplys", fields: [replyId], references: [id])
    replyId   String?
    likes     User[]   @relation("LikedReplys")
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model About {
    template String
    rtl      Boolean @default(false)
    user     User    @relation(fields: [userId], references: [id])
    userId   String

    @@id([userId])
}
